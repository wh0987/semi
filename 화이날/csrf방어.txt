CSRF방어

CSRF토큰 사용
서버에 DATA를 전송할때 발생하는 POST REQUEST에 CSRF TOKEN을 담아 보내는 방법이다
작동 방법은 간단하다. 먼저 서버가 클라이언트로 토큰을 전송하고 클라이언트는 DATA를 전송할때 폼안에 앞서 서버가 보낸 토큰과 함께 제출한다. 만약 이때 서버가 받은 토큰이 올바르지 않다면 서버가 해당 REQUEST를 거부하는 방식이다.

예제 코드로는 다음과 같다

// 로그인시, 또는 작업화면 요청시 CSRF토큰을 생성하여 세션에 저장한다
-> CSRF_TOKEN 이라는 세션에 UUID class의 randomUUID 함수를 사용하여 난수를 발생시켜 값을 저장하는 것을 의미하는 코드 
session.setAttribute("CSRF_TOKEN",UUID.randomUUID().toString());


// 요청 페이지에 CSRF 토큰을 셋팅하여 전송한다
-> 게시판의 글쓰는 페이지에서 해당 input태그를 이용하여 위에서 뽑은 난수값 즉 TOKEN값을 셋팅을 해줘서 data를 request할때 이 토큰값과 같이 보내져 세션에 저장된 토큰값과 비교가 되는 것이다. 
<input type="hidden" name="_csrf" value="${CSRF_TOKEN}" />

글이 작성됐다면
이제 전달된 토큰값과 파라미터로 전달된 csrf 토큰값을 비교해야한다

// 파라미터로 전달된 csrf 토큰 값
-> 전달된 토큰값을 param이라는 string 변수에 넣어준 뒤 equals 함수를 사용해 세션에 저장된 토큰값과 비교한다
String param = request.getParameter("_csrf");

// 세션에 저장된 토큰 값과 일치 여부 검증
-> 같으면 ture를 틀리면 false를 반환하여 해당 flag상태에 맞게 request에 응답이 가능해진다.
if (request.getSession().getAttribute("CSRF_TOKEN").equals(param)){
	return ture;
} else {
	response.sendRedirect("/");
	return false;
}


XSS방어

(기존에 서술했던 방어 방법중 html script 구문을 사용하지 못하게 하는 방법을 사용)
예제 코드로는 간단하다

게시판에 글을 등록하는 페이지를 구현하는 jsp파일에서 script구문에서 script구문을 사용하지 못하는 명령어를 추가해주는 것이다

글에 해당하는 contents의 value 값을 contents.value.replace(/script/,"");
이런식으로 고쳐주면된다.아주 간단하게 script이 되는 부분을 "" 즉, 공백처리로 바꿔주는 것이다.하지만 대문자/중복/특수문자 의 사용으로 해당 script구문을 다시 공략할 수 있는데 이부분 또한 고려 하기 위해서는 
contents.value.replace(/script/i,g,"a");
와 같이 'i' , 'g' 옵션을 추가해주고 구문을 공백이 아닌 아예 다른 문자로 치환해주는 방법이 있다

